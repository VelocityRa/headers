typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef struct _EX_PUSH_LOCK
{
  union
  {
    struct 
    {
      U32 Locked : 1; 
      U32 Waiting : 1; 
      U32 Waking : 1; 
      U32 MultipleShared : 1; 
      U32 Shared : 28; 
    }; 
    U32 Value;
    void* Ptr;
  }; 
} EX_PUSH_LOCK, *PEX_PUSH_LOCK; 

typedef struct _RTL_BITMAP
{
  U32 SizeOfBitMap;
  U32* Buffer;
} RTL_BITMAP, *PRTL_BITMAP; 

typedef struct _MM_PAGED_POOL_INFO
{
  struct _EX_PUSH_LOCK Lock;
  struct _RTL_BITMAP PagedPoolAllocationMap;
  struct _MMPTE* FirstPteForPagedPool;
  U32 MaximumSize;
  U32 PagedPoolHint;
  U32 AllocatedPagedPool;
} MM_PAGED_POOL_INFO, *PMM_PAGED_POOL_INFO; 

typedef struct _MI_POOL_STATE
{
  U32 MaximumNonPagedPoolThreshold;
  U32 NonPagedPoolSListMaximum[3];
  volatile U32 AllocatedNonPagedPool;
  struct _SINGLE_LIST_ENTRY BadPoolHead;
  U32 PoolFailures[3][3];
  U32 PoolFailureReasons[11];
  U32 LowPagedPoolThreshold;
  U32 HighPagedPoolThreshold;
  S32 SpecialPoolPdesMax;
  U8 NonPagedPoolNodes[1024];
  struct _MM_PAGED_POOL_INFO PagedProtoPoolInfo;
  U32 PagedPoolSListMaximum;
  U32 PreemptiveTrims[4];
  U32 SpecialPagesInUsePeak;
  U32 SpecialPoolRejected[9];
  volatile U32 SpecialPagesNonPaged;
  volatile S32 SpecialPoolPdes;
  U32 SessionSpecialPoolPdesMax;
  U32 TotalPagedPoolQuota;
  U32 TotalNonPagedPoolQuota;
} MI_POOL_STATE, *PMI_POOL_STATE; 

