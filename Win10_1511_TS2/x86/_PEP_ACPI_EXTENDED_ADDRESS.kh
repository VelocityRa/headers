typedef enum _PEP_ACPI_RESOURCE_TYPE
{
  PepAcpiMemory = 0,
  PepAcpiIoPort = 1,
  PepAcpiInterrupt = 2,
  PepAcpiGpioIo = 3,
  PepAcpiGpioInt = 4,
  PepAcpiSpbI2c = 5,
  PepAcpiSpbSpi = 6,
  PepAcpiSpbUart = 7,
  PepAcpiExtendedMemory = 8,
  PepAcpiExtendedIo = 9,
} PEP_ACPI_RESOURCE_TYPE, *PPEP_ACPI_RESOURCE_TYPE;

typedef union _PEP_ACPI_RESOURCE_FLAGS
{
  union
  {
    U32 AsULong;
    struct 
    {
      U32 Shared : 1; 
      U32 Wake : 1; 
      U32 ResourceUsage : 1; 
      U32 SlaveMode : 1; 
      U32 AddressingMode : 1; 
      U32 SharedMode : 1; 
      U32 Reserved : 26; 
    }; 
  }; 
} PEP_ACPI_RESOURCE_FLAGS, *PPEP_ACPI_RESOURCE_FLAGS; 

typedef struct _PEP_ACPI_EXTENDED_ADDRESS
{
  enum _PEP_ACPI_RESOURCE_TYPE Type;
  union _PEP_ACPI_RESOURCE_FLAGS Flags;
  U8 ResourceFlags;
  U8 GeneralFlags;
  U8 TypeSpecificFlags;
  U8 RevisionId;
  U8 Reserved;
  U64 Granularity;
  U64 MinimumAddress;
  U64 MaximumAddress;
  U64 TranslationAddress;
  U64 AddressLength;
  U64 TypeAttribute;
  struct _UNICODE_STRING* DescriptorName;
  S32 __PADDING__[1];
} PEP_ACPI_EXTENDED_ADDRESS, *PPEP_ACPI_EXTENDED_ADDRESS; 

