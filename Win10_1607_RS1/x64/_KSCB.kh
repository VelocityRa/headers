typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _RTL_BALANCED_NODE
{
  union
  {
    struct _RTL_BALANCED_NODE* Children[2];
    struct
    {
      struct _RTL_BALANCED_NODE* Left;
      struct _RTL_BALANCED_NODE* Right;
    }; 
  }; 
  union
  {
    U8 Red : 1; 
    U8 Balance : 2; 
    U64 ParentValue;
  }; 
} RTL_BALANCED_NODE, *PRTL_BALANCED_NODE; 

typedef struct _RTL_RB_TREE
{
  struct _RTL_BALANCED_NODE* Root;
  struct _RTL_BALANCED_NODE* Min;
} RTL_RB_TREE, *PRTL_RB_TREE; 

typedef struct _KSCB
{
  U64 GenerationCycles;
  U64 MinQuotaCycleTarget;
  U64 MaxQuotaCycleTarget;
  U64 RankCycleTarget;
  U64 LongTermCycles;
  U64 LastReportedCycles;
  volatile U64 OverQuotaHistory;
  U64 ReadyTime;
  U64 InsertTime;
  struct _LIST_ENTRY PerProcessorList;
  struct _RTL_BALANCED_NODE QueueNode;
  struct 
  {
    U8 Inserted : 1; 
    U8 MaxOverQuota : 1; 
    U8 MinOverQuota : 1; 
    U8 RankBias : 1; 
    U8 SoftCap : 1; 
    U8 ShareRankOwner : 1; 
    U8 Spare1 : 2; 
  }; 
  U8 Depth;
  U16 ReadySummary;
  U32 Rank;
  volatile U32* ShareRank;
  volatile U32 OwnerShareRank;
  struct _LIST_ENTRY ReadyListHead[16];
  struct _RTL_RB_TREE ChildScbQueue;
  struct _KSCB* Parent;
  struct _KSCB* Root;
} KSCB, *PKSCB; 

