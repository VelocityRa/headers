typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _PO_HIBER_PERF
{
  U64 HiberIoTicks;
  U64 HiberIoCpuTicks;
  U64 HiberInitTicks;
  U64 HiberHiberFileTicks;
  U64 HiberCompressTicks;
  U64 HiberSharedBufferTicks;
  U64 HiberChecksumTicks;
  U64 HiberChecksumIoTicks;
  union _LARGE_INTEGER TotalHibernateTime;
  union _LARGE_INTEGER HibernateCompleteTimestamp;
  U32 POSTTime;
  U32 ResumeBootMgrTime;
  U32 BootmgrUserInputTime;
  U64 ResumeAppTicks;
  U64 ResumeAppStartTimestamp;
  U64 ResumeLibraryInitTicks;
  U64 ResumeInitTicks;
  U64 ResumeRestoreImageStartTimestamp;
  U64 ResumeHiberFileTicks;
  U64 ResumeIoTicks;
  U64 ResumeDecompressTicks;
  U64 ResumeAllocateTicks;
  U64 ResumeUserInOutTicks;
  U64 ResumeMapTicks;
  U64 ResumeUnmapTicks;
  U64 ResumeChecksumTicks;
  U64 ResumeChecksumIoTicks;
  U64 ResumeKernelSwitchTimestamp;
  U64 WriteLogDataTimestamp;
  U64 KernelReturnFromHandler;
  U64 TimeStampCounterAtSwitchTime;
  U64 HalTscOffset;
  U64 HvlTscOffset;
  U64 SleeperThreadEnd;
  U64 KernelReturnSystemPowerStateTimestamp;
  U64 IoBoundedness;
  U64 KernelDecompressTicks;
  U64 KernelIoTicks;
  U64 KernelCopyTicks;
  U64 ReadCheckCount;
  U64 KernelInitTicks;
  U64 KernelResumeHiberFileTicks;
  U64 KernelIoCpuTicks;
  U64 KernelSharedBufferTicks;
  U64 KernelAnimationTicks;
  U64 KernelChecksumTicks;
  U64 KernelChecksumIoTicks;
  union _LARGE_INTEGER AnimationStart;
  union _LARGE_INTEGER AnimationStop;
  U32 DeviceResumeTime;
  U64 SecurePagesProcessed;
  U64 BootPagesProcessed;
  U64 KernelPagesProcessed;
  U64 BootBytesWritten;
  U64 KernelBytesWritten;
  U64 BootPagesWritten;
  U64 KernelPagesWritten;
  U64 BytesWritten;
  U32 PagesWritten;
  U32 FileRuns;
  U32 NoMultiStageResumeReason;
  U32 MaxHuffRatio;
  U64 AdjustedTotalResumeTime;
  U64 ResumeCompleteTimestamp;
} PO_HIBER_PERF, *PPO_HIBER_PERF; 

