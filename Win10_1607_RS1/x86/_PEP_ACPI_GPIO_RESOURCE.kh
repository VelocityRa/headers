typedef enum _PEP_ACPI_RESOURCE_TYPE
{
  PepAcpiMemory = 0,
  PepAcpiIoPort = 1,
  PepAcpiInterrupt = 2,
  PepAcpiGpioIo = 3,
  PepAcpiGpioInt = 4,
  PepAcpiSpbI2c = 5,
  PepAcpiSpbSpi = 6,
  PepAcpiSpbUart = 7,
  PepAcpiExtendedMemory = 8,
  PepAcpiExtendedIo = 9,
} PEP_ACPI_RESOURCE_TYPE, *PPEP_ACPI_RESOURCE_TYPE;

typedef union _PEP_ACPI_RESOURCE_FLAGS
{
  union
  {
    U32 AsULong;
    struct 
    {
      U32 Shared : 1; 
      U32 Wake : 1; 
      U32 ResourceUsage : 1; 
      U32 SlaveMode : 1; 
      U32 AddressingMode : 1; 
      U32 SharedMode : 1; 
      U32 Reserved : 26; 
    }; 
  }; 
} PEP_ACPI_RESOURCE_FLAGS, *PPEP_ACPI_RESOURCE_FLAGS; 

typedef enum _KINTERRUPT_MODE
{
  LevelSensitive = 0,
  Latched = 1,
} KINTERRUPT_MODE, *PKINTERRUPT_MODE;

typedef enum _KINTERRUPT_POLARITY
{
  InterruptPolarityUnknown = 0,
  InterruptActiveHigh = 1,
  InterruptRisingEdge = 1,
  InterruptActiveLow = 2,
  InterruptFallingEdge = 2,
  InterruptActiveBoth = 3,
  InterruptActiveBothTriggerLow = 3,
  InterruptActiveBothTriggerHigh = 4,
} KINTERRUPT_POLARITY, *PKINTERRUPT_POLARITY;

typedef enum _GPIO_PIN_CONFIG_TYPE
{
  PullDefault = 0,
  PullUp = 1,
  PullDown = 2,
  PullNone = 3,
} GPIO_PIN_CONFIG_TYPE, *PGPIO_PIN_CONFIG_TYPE;

typedef enum _GPIO_PIN_IORESTRICTION_TYPE
{
  IoRestrictionNone = 0,
  IoRestrictionInputOnly = 1,
  IoRestrictionOutputOnly = 2,
  IoRestrictionNoneAndPreserve = 3,
} GPIO_PIN_IORESTRICTION_TYPE, *PGPIO_PIN_IORESTRICTION_TYPE;

typedef struct _PEP_ACPI_GPIO_RESOURCE
{
  enum _PEP_ACPI_RESOURCE_TYPE Type;
  union _PEP_ACPI_RESOURCE_FLAGS Flags;
  enum _KINTERRUPT_MODE InterruptType;
  enum _KINTERRUPT_POLARITY InterruptPolarity;
  enum _GPIO_PIN_CONFIG_TYPE PinConfig;
  enum _GPIO_PIN_IORESTRICTION_TYPE IoRestrictionType;
  U16 DriveStrength;
  U16 DebounceTimeout;
  U16* PinTable;
  U16 PinCount;
  U8 ResourceSourceIndex;
  struct _UNICODE_STRING* ResourceSourceName;
  U8* VendorData;
  U16 VendorDataLength;
  char __PADDING__[2];
} PEP_ACPI_GPIO_RESOURCE, *PPEP_ACPI_GPIO_RESOURCE; 

