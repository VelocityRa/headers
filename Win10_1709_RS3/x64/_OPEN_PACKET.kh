typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef enum _CREATE_FILE_TYPE
{
  CreateFileTypeNone = 0,
  CreateFileTypeNamedPipe = 1,
  CreateFileTypeMailslot = 2,
} CREATE_FILE_TYPE, *PCREATE_FILE_TYPE;

typedef struct _IO_DRIVER_CREATE_CONTEXT
{
  S16 Size;
  struct _ECP_LIST* ExtraCreateParameter;
  void* DeviceObjectHint;
  struct _TXN_PARAMETER_BLOCK* TxnParameters;
  struct _EJOB* SiloContext;
} IO_DRIVER_CREATE_CONTEXT, *PIO_DRIVER_CREATE_CONTEXT; 

typedef enum _FILE_INFORMATION_CLASS
{
  FileDirectoryInformation = 1,
  FileFullDirectoryInformation = 2,
  FileBothDirectoryInformation = 3,
  FileBasicInformation = 4,
  FileStandardInformation = 5,
  FileInternalInformation = 6,
  FileEaInformation = 7,
  FileAccessInformation = 8,
  FileNameInformation = 9,
  FileRenameInformation = 10,
  FileLinkInformation = 11,
  FileNamesInformation = 12,
  FileDispositionInformation = 13,
  FilePositionInformation = 14,
  FileFullEaInformation = 15,
  FileModeInformation = 16,
  FileAlignmentInformation = 17,
  FileAllInformation = 18,
  FileAllocationInformation = 19,
  FileEndOfFileInformation = 20,
  FileAlternateNameInformation = 21,
  FileStreamInformation = 22,
  FilePipeInformation = 23,
  FilePipeLocalInformation = 24,
  FilePipeRemoteInformation = 25,
  FileMailslotQueryInformation = 26,
  FileMailslotSetInformation = 27,
  FileCompressionInformation = 28,
  FileObjectIdInformation = 29,
  FileCompletionInformation = 30,
  FileMoveClusterInformation = 31,
  FileQuotaInformation = 32,
  FileReparsePointInformation = 33,
  FileNetworkOpenInformation = 34,
  FileAttributeTagInformation = 35,
  FileTrackingInformation = 36,
  FileIdBothDirectoryInformation = 37,
  FileIdFullDirectoryInformation = 38,
  FileValidDataLengthInformation = 39,
  FileShortNameInformation = 40,
  FileIoCompletionNotificationInformation = 41,
  FileIoStatusBlockRangeInformation = 42,
  FileIoPriorityHintInformation = 43,
  FileSfioReserveInformation = 44,
  FileSfioVolumeInformation = 45,
  FileHardLinkInformation = 46,
  FileProcessIdsUsingFileInformation = 47,
  FileNormalizedNameInformation = 48,
  FileNetworkPhysicalNameInformation = 49,
  FileIdGlobalTxDirectoryInformation = 50,
  FileIsRemoteDeviceInformation = 51,
  FileUnusedInformation = 52,
  FileNumaNodeInformation = 53,
  FileStandardLinkInformation = 54,
  FileRemoteProtocolInformation = 55,
  FileRenameInformationBypassAccessCheck = 56,
  FileLinkInformationBypassAccessCheck = 57,
  FileVolumeNameInformation = 58,
  FileIdInformation = 59,
  FileIdExtdDirectoryInformation = 60,
  FileReplaceCompletionInformation = 61,
  FileHardLinkFullIdInformation = 62,
  FileIdExtdBothDirectoryInformation = 63,
  FileDispositionInformationEx = 64,
  FileRenameInformationEx = 65,
  FileRenameInformationExBypassAccessCheck = 66,
  FileDesiredStorageClassInformation = 67,
  FileStatInformation = 68,
  FileMemoryPartitionInformation = 69,
  FileMaximumInformation = 70,
} FILE_INFORMATION_CLASS, *PFILE_INFORMATION_CLASS;

typedef struct _OPEN_PACKET
{
  S16 Type;
  S16 Size;
  struct _FILE_OBJECT* FileObject;
  S32 FinalStatus;
  U64 Information;
  U32 ParseCheck;
  union
  {
    struct _FILE_OBJECT* RelatedFileObject;
    struct _DEVICE_OBJECT* ReferencedDeviceObject;
  }; 
  struct _OBJECT_ATTRIBUTES* OriginalAttributes;
  union _LARGE_INTEGER AllocationSize;
  U32 CreateOptions;
  U16 FileAttributes;
  U16 ShareAccess;
  void* EaBuffer;
  U32 EaLength;
  U32 Options;
  U32 Disposition;
  struct _FILE_BASIC_INFORMATION* BasicInformation;
  struct _FILE_NETWORK_OPEN_INFORMATION* NetworkInformation;
  void* FileInformation;
  enum _CREATE_FILE_TYPE CreateFileType;
  void* MailslotOrPipeParameters;
  U8 Override;
  U8 QueryOnly;
  U8 DeleteOnly;
  U8 FullAttributes;
  struct _DUMMY_FILE_OBJECT* LocalFileObject;
  U32 InternalFlags;
  char AccessMode;
  struct _IO_DRIVER_CREATE_CONTEXT DriverCreateContext;
  enum _FILE_INFORMATION_CLASS FileInformationClass;
  U32 FileInformationLength;
  U8 FilterQuery;
  char __PADDING__[7];
} OPEN_PACKET, *POPEN_PACKET; 

