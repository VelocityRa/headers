typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef struct _KDPC
{
  union
  {
    U32 TargetInfoAsUlong;
    struct
    {
      U8 Type;
      U8 Importance;
      volatile U16 Number;
    }; 
  }; 
  struct _SINGLE_LIST_ENTRY DpcListEntry;
  U32 ProcessorHistory;
  void* DeferredRoutine;
  void* DeferredContext;
  void* SystemArgument1;
  void* SystemArgument2;
  void* DpcData;
} KDPC, *PKDPC; 

typedef union _SLIST_HEADER
{
  union
  {
    U64 Alignment;
    struct
    {
      struct _SINGLE_LIST_ENTRY Next;
      U16 Depth;
      U16 CpuId;
    }; 
  }; 
} SLIST_HEADER, *PSLIST_HEADER; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _KAPC
{
  U8 Type;
  U8 SpareByte0;
  U8 Size;
  U8 SpareByte1;
  U32 SpareLong0;
  struct _KTHREAD* Thread;
  struct _LIST_ENTRY ApcListEntry;
  union
  {
    struct
    {
      void* KernelRoutine;
      void* RundownRoutine;
      void* NormalRoutine;
    }; 
    void* Reserved[3];
  }; 
  void* NormalContext;
  void* SystemArgument1;
  void* SystemArgument2;
  char ApcStateIndex;
  char ApcMode;
  U8 Inserted;
  char __PADDING__[1];
} KAPC, *PKAPC; 

typedef struct _ETW_APC_ENTRY
{
  union
  {
    struct _SINGLE_LIST_ENTRY SListEntry;
    struct _KAPC Apc;
  }; 
} ETW_APC_ENTRY, *PETW_APC_ENTRY; 

typedef struct _ETW_STACK_TRACE_BLOCK
{
  S32 Flags;
  union _LARGE_INTEGER RelatedTimestamp;
  struct _ETHREAD* Thread;
  struct _KDPC StackWalkDpc;
  union _SLIST_HEADER ApcListHead;
  struct _ETW_APC_ENTRY ApcEntry[12];
  S32 ApcCount;
  S32 MaxApcCount;
} ETW_STACK_TRACE_BLOCK, *PETW_STACK_TRACE_BLOCK; 

