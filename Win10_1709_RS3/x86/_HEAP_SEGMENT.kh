typedef struct _HEAP_UNPACKED_ENTRY
{
  union
  {
    struct
    {
      U16 Size;
      U8 Flags;
      U8 SmallTagIndex;
    }; 
    U32 SubSegmentCode;
  }; 
  U16 PreviousSize;
  union
  {
    U8 SegmentOffset;
    U8 LFHFlags;
  }; 
  U8 UnusedBytes;
} HEAP_UNPACKED_ENTRY, *PHEAP_UNPACKED_ENTRY; 

typedef struct _HEAP_EXTENDED_ENTRY
{
  union
  {
    struct
    {
      U16 FunctionIndex;
      U16 ContextValue;
    }; 
    U32 InterceptorValue;
  }; 
  U16 UnusedBytesLength;
  U8 EntryOffset;
  U8 ExtendedBlockSignature;
} HEAP_EXTENDED_ENTRY, *PHEAP_EXTENDED_ENTRY; 

typedef struct _HEAP_ENTRY
{
  union
  {
    struct _HEAP_UNPACKED_ENTRY UnpackedEntry;
    struct
    {
      U16 Size;
      U8 Flags;
      U8 SmallTagIndex;
    }; 
    struct
    {
      U32 SubSegmentCode;
      U16 PreviousSize;
      union
      {
        U8 SegmentOffset;
        struct
        {
          U8 LFHFlags;
          U8 UnusedBytes;
        }; 
      }; 
    }; 
    struct _HEAP_EXTENDED_ENTRY ExtendedEntry;
    struct
    {
      U16 FunctionIndex;
      U16 ContextValue;
    }; 
    struct
    {
      U32 InterceptorValue;
      U16 UnusedBytesLength;
      U8 EntryOffset;
      U8 ExtendedBlockSignature;
    }; 
    struct
    {
      U32 Code1;
      union
      {
        struct
        {
          U16 Code2;
          U8 Code3;
          U8 Code4;
        }; 
        U32 Code234;
      }; 
    }; 
    U64 AgregateCode;
  }; 
} HEAP_ENTRY, *PHEAP_ENTRY; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _HEAP_SEGMENT
{
  struct _HEAP_ENTRY Entry;
  U32 SegmentSignature;
  U32 SegmentFlags;
  struct _LIST_ENTRY SegmentListEntry;
  struct _HEAP* Heap;
  void* BaseAddress;
  U32 NumberOfPages;
  struct _HEAP_ENTRY* FirstEntry;
  struct _HEAP_ENTRY* LastValidEntry;
  U32 NumberOfUnCommittedPages;
  U32 NumberOfUnCommittedRanges;
  U16 SegmentAllocatorBackTraceIndex;
  U16 Reserved;
  struct _LIST_ENTRY UCRSegmentList;
} HEAP_SEGMENT, *PHEAP_SEGMENT; 

