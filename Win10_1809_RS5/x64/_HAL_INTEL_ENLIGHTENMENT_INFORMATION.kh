typedef struct _HAL_INTEL_ENLIGHTENMENT_INFORMATION
{
  U32 Enlightenments;
  U32 HypervisorConnected;
  void* EndOfInterrupt;
  void* ApicWriteIcr;
  U32 Reserved0;
  U32 SpinCountMask;
  void* LongSpinWait;
  void* GetReferenceTime;
  void* SetSystemSleepProperty;
  void* EnterSleepState;
  void* NotifyDebugDeviceAvailable;
  void* MapDeviceInterrupt;
  void* UnmapDeviceInterrupt;
  void* RetargetDeviceInterrupt;
  void* SetHpetConfig;
  void* NotifyHpetEnabled;
  void* QueryAssociatedProcessors;
  void* ReadMultipleMsr;
  void* WriteMultipleMsr;
  void* ReadCpuid;
  void* LpWritebackInvalidate;
  void* GetMachineCheckContext;
  void* SuspendPartition;
  void* ResumePartition;
  void* SetSystemMachineCheckProperty;
  void* WheaErrorNotification;
  void* GetProcessorIndexFromVpIndex;
  void* SyntheticClusterIpi;
  void* VpStartEnabled;
  void* StartVirtualProcessor;
  void* GetVpIndexFromApicId;
  void* IumAccessPciDevice;
  void* IumEfiRuntimeService;
  void* SvmGetSystemCapabilities;
  void* SvmGetDeviceCapabilities;
  void* SvmCreatePasidSpace;
  void* SvmSetPasidAddressSpace;
  void* SvmFlushPasid;
  void* SvmAttachPasidSpace;
  void* SvmDetachPasidSpace;
  void* SvmEnablePasid;
  void* SvmDisablePasid;
  void* SvmAcknowledgePageRequest;
  void* SvmCreatePrQueue;
  void* SvmDeletePrQueue;
  void* SvmClearPrqStalled;
  void* SvmSetDeviceEnabled;
  void* HvDebuggerPowerHandler;
  void* SetQpcBias;
  void* GetQpcBias;
  void* RegisterDeviceId;
  void* UnregisterDeviceId;
  void* AllocateDeviceDomain;
  void* AttachDeviceDomain;
  void* DetachDeviceDomain;
  void* DeleteDeviceDomain;
  void* MapDeviceLogicalRange;
  void* UnmapDeviceLogicalRange;
  void* MapDeviceSparsePages;
  void* UnmapDeviceSparsePages;
  void* GetDmaGuardEnabled;
  void* UpdateMicrocode;
} HAL_INTEL_ENLIGHTENMENT_INFORMATION, *PHAL_INTEL_ENLIGHTENMENT_INFORMATION; 

