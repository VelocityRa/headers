typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _I386_LOADER_BLOCK
{
  void* CommonDataArea;
  U32 MachineType;
  U32 VirtualBias;
} I386_LOADER_BLOCK, *PI386_LOADER_BLOCK; 

typedef struct _ARM_LOADER_BLOCK
{
  U32 PlaceHolder;
} ARM_LOADER_BLOCK, *PARM_LOADER_BLOCK; 

typedef struct _EFI_FIRMWARE_INFORMATION
{
  U32 FirmwareVersion;
  struct _VIRTUAL_EFI_RUNTIME_SERVICES* VirtualEfiRuntimeServices;
  S32 SetVirtualAddressMapStatus;
  U32 MissedMappingsCount;
  struct _LIST_ENTRY FirmwareResourceList;
  void* EfiMemoryMap;
  U32 EfiMemoryMapSize;
  U32 EfiMemoryMapDescriptorSize;
} EFI_FIRMWARE_INFORMATION, *PEFI_FIRMWARE_INFORMATION; 

typedef struct _PCAT_FIRMWARE_INFORMATION
{
  U32 PlaceHolder;
} PCAT_FIRMWARE_INFORMATION, *PPCAT_FIRMWARE_INFORMATION; 

typedef struct _FIRMWARE_INFORMATION_LOADER_BLOCK
{
  struct 
  {
    U32 FirmwareTypeUefi : 1; 
    U32 EfiRuntimeUseIum : 1; 
    U32 EfiRuntimePageProtectionSupported : 1; 
    U32 Reserved : 29; 
  }; 
  union
  {
    union
    {
      struct _EFI_FIRMWARE_INFORMATION EfiInformation;
      struct _PCAT_FIRMWARE_INFORMATION PcatInformation;
    }; 
  } u;
} FIRMWARE_INFORMATION_LOADER_BLOCK, *PFIRMWARE_INFORMATION_LOADER_BLOCK; 

typedef struct _LOADER_PARAMETER_BLOCK
{
  U32 OsMajorVersion;
  U32 OsMinorVersion;
  U32 Size;
  U32 OsLoaderSecurityVersion;
  struct _LIST_ENTRY LoadOrderListHead;
  struct _LIST_ENTRY MemoryDescriptorListHead;
  struct _LIST_ENTRY BootDriverListHead;
  struct _LIST_ENTRY EarlyLaunchListHead;
  struct _LIST_ENTRY CoreDriverListHead;
  struct _LIST_ENTRY CoreExtensionsDriverListHead;
  struct _LIST_ENTRY TpmCoreDriverListHead;
  U32 KernelStack;
  U32 Prcb;
  U32 Process;
  U32 Thread;
  U32 KernelStackSize;
  U32 RegistryLength;
  void* RegistryBase;
  struct _CONFIGURATION_COMPONENT_DATA* ConfigurationRoot;
  char* ArcBootDeviceName;
  char* ArcHalDeviceName;
  char* NtBootPathName;
  char* NtHalPathName;
  char* LoadOptions;
  struct _NLS_DATA_BLOCK* NlsData;
  struct _ARC_DISK_INFORMATION* ArcDiskInformation;
  struct _LOADER_PARAMETER_EXTENSION* Extension;
  union
  {
    union
    {
      struct _I386_LOADER_BLOCK I386;
      struct _ARM_LOADER_BLOCK Arm;
    }; 
  } u;
  struct _FIRMWARE_INFORMATION_LOADER_BLOCK FirmwareInformation;
  char* OsBootstatPathName;
  char* ArcOSDataDeviceName;
  char* ArcWindowsSysPartName;
} LOADER_PARAMETER_BLOCK, *PLOADER_PARAMETER_BLOCK; 

