typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _IO_STATUS_BLOCK
{
  union
  {
    S32 Status;
    void* Pointer;
  }; 
  U32 Information;
} IO_STATUS_BLOCK, *PIO_STATUS_BLOCK; 

typedef struct _MODWRITER_FLAGS
{
  struct 
  {
    U32 KeepForever : 1; 
    U32 Networked : 1; 
    U32 IoPriority : 3; 
    U32 ModifiedStoreWrite : 1; 
  }; 
} MODWRITER_FLAGS, *PMODWRITER_FLAGS; 

typedef struct _KAPC
{
  U8 Type;
  U8 SpareByte0;
  U8 Size;
  U8 SpareByte1;
  U32 SpareLong0;
  struct _KTHREAD* Thread;
  struct _LIST_ENTRY ApcListEntry;
  union
  {
    struct
    {
      void* KernelRoutine;
      void* RundownRoutine;
      void* NormalRoutine;
    }; 
    void* Reserved[3];
  }; 
  void* NormalContext;
  void* SystemArgument1;
  void* SystemArgument2;
  char ApcStateIndex;
  char ApcMode;
  U8 Inserted;
  char __PADDING__[1];
} KAPC, *PKAPC; 

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _MDL
{
  struct _MDL* Next;
  S16 Size;
  S16 MdlFlags;
  struct _EPROCESS* Process;
  void* MappedSystemVa;
  void* StartVa;
  U32 ByteCount;
  U32 ByteOffset;
} MDL, *PMDL; 

typedef struct _MMMOD_WRITER_MDL_ENTRY
{
  struct _LIST_ENTRY Links;
  union
  {
    struct _IO_STATUS_BLOCK IoStatus;
  } u;
  struct _IRP* Irp;
  struct _MODWRITER_FLAGS u1;
  U32 StoreWriteRefCount;
  struct _KAPC StoreWriteCompletionApc;
  U32 ByteCount;
  U32 ChargedPages;
  struct _MMPAGING_FILE* PagingFile;
  struct _FILE_OBJECT* File;
  struct _CONTROL_AREA* ControlArea;
  struct _ERESOURCE* FileResource;
  union _LARGE_INTEGER WriteOffset;
  union _LARGE_INTEGER IssueTime;
  struct _MI_PARTITION* Partition;
  struct _MDL* PointerMdl;
  struct _MDL Mdl;
  U32 Page[1];
} MMMOD_WRITER_MDL_ENTRY, *PMMMOD_WRITER_MDL_ENTRY; 

