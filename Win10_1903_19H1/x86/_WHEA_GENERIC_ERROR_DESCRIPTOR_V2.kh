typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef union _WHEA_NOTIFICATION_FLAGS
{
  union
  {
    struct 
    {
      U16 PollIntervalRW : 1; 
      U16 SwitchToPollingThresholdRW : 1; 
      U16 SwitchToPollingWindowRW : 1; 
      U16 ErrorThresholdRW : 1; 
      U16 ErrorThresholdWindowRW : 1; 
      U16 Reserved : 11; 
    }; 
    U16 AsUSHORT;
  }; 
} WHEA_NOTIFICATION_FLAGS, *PWHEA_NOTIFICATION_FLAGS; 

typedef struct _WHEA_NOTIFICATION_DESCRIPTOR
{
  U8 Type;
  U8 Length;
  union _WHEA_NOTIFICATION_FLAGS Flags;
  union
  {
    union
    {
      struct
      {
        U32 PollInterval;
      } Polled;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Interrupt;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } LocalInterrupt;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Sci;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Nmi;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Sea;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Sei;
      struct
      {
        U32 PollInterval;
        U32 Vector;
        U32 SwitchToPollingThreshold;
        U32 SwitchToPollingWindow;
        U32 ErrorThreshold;
        U32 ErrorThresholdWindow;
      } Gsiv;
    }; 
  } u;
} WHEA_NOTIFICATION_DESCRIPTOR, *PWHEA_NOTIFICATION_DESCRIPTOR; 

typedef struct _WHEA_GENERIC_ERROR_DESCRIPTOR_V2
{
  U16 Type;
  U8 Reserved;
  U8 Enabled;
  U32 ErrStatusBlockLength;
  U32 RelatedErrorSourceId;
  U8 ErrStatusAddressSpaceID;
  U8 ErrStatusAddressBitWidth;
  U8 ErrStatusAddressBitOffset;
  U8 ErrStatusAddressAccessSize;
  union _LARGE_INTEGER ErrStatusAddress;
  struct _WHEA_NOTIFICATION_DESCRIPTOR Notify;
  U8 ReadAckAddressSpaceID;
  U8 ReadAckAddressBitWidth;
  U8 ReadAckAddressBitOffset;
  U8 ReadAckAddressAccessSize;
  union _LARGE_INTEGER ReadAckAddress;
  U64 ReadAckPreserveMask;
  U64 ReadAckWriteMask;
} WHEA_GENERIC_ERROR_DESCRIPTOR_V2, *PWHEA_GENERIC_ERROR_DESCRIPTOR_V2; 

