typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _GUID
{
  U32 Data1;
  U16 Data2;
  U16 Data3;
  U8 Data4[8];
} GUID, *PGUID; 

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _ETW_LAST_ENABLE_INFO
{
  union _LARGE_INTEGER EnableFlags;
  U16 LoggerId;
  U8 Level;
  struct 
  {
    U8 Enabled : 1; 
    U8 InternalFlag : 7; 
  }; 
  S32 __PADDING__[1];
} ETW_LAST_ENABLE_INFO, *PETW_LAST_ENABLE_INFO; 

typedef struct _TRACE_ENABLE_INFO
{
  U32 IsEnabled;
  U8 Level;
  U8 Reserved1;
  U16 LoggerId;
  U32 EnableProperty;
  U32 Reserved2;
  U64 MatchAnyKeyword;
  U64 MatchAllKeyword;
} TRACE_ENABLE_INFO, *PTRACE_ENABLE_INFO; 

typedef struct _EX_PUSH_LOCK
{
  union
  {
    struct 
    {
      U64 Locked : 1; 
      U64 Waiting : 1; 
      U64 Waking : 1; 
      U64 MultipleShared : 1; 
      U64 Shared : 60; 
    }; 
    U64 Value;
    void* Ptr;
  }; 
} EX_PUSH_LOCK, *PEX_PUSH_LOCK; 

typedef struct _ETW_GUID_ENTRY
{
  struct _LIST_ENTRY GuidList;
  volatile S64 RefCount;
  struct _GUID Guid;
  struct _LIST_ENTRY RegListHead;
  void* SecurityDescriptor;
  union
  {
    struct _ETW_LAST_ENABLE_INFO LastEnable;
    U64 MatchId;
  }; 
  struct _TRACE_ENABLE_INFO ProviderEnableInfo;
  struct _TRACE_ENABLE_INFO EnableInfo[8];
  struct _ETW_FILTER_HEADER* FilterData;
  struct _ETW_SILODRIVERSTATE* SiloState;
  struct _EX_PUSH_LOCK Lock;
  struct _ETHREAD* LockOwner;
} ETW_GUID_ENTRY, *PETW_GUID_ENTRY; 

typedef struct _ETW_HASH_BUCKET
{
  struct _LIST_ENTRY ListHead[3];
  struct _EX_PUSH_LOCK BucketLock;
} ETW_HASH_BUCKET, *PETW_HASH_BUCKET; 

typedef struct _RTL_RB_TREE
{
  struct _RTL_BALANCED_NODE* Root;
  union
  {
    U8 Encoded : 1; 
    struct _RTL_BALANCED_NODE* Min;
  }; 
} RTL_RB_TREE, *PRTL_RB_TREE; 

typedef struct _ETW_PRIV_HANDLE_DEMUX_TABLE
{
  struct _RTL_RB_TREE Tree;
  struct _EX_PUSH_LOCK Lock;
  U16 SequenceNumber;
  char __PADDING__[6];
} ETW_PRIV_HANDLE_DEMUX_TABLE, *PETW_PRIV_HANDLE_DEMUX_TABLE; 

typedef struct _ETW_COUNTERS
{
  S32 GuidCount;
  S32 PoolUsage[2];
  S32 SessionCount;
} ETW_COUNTERS, *PETW_COUNTERS; 

typedef struct _ETW_SYSTEM_LOGGER
{
  U8 LoggerId;
  U8 ClockType;
} ETW_SYSTEM_LOGGER, *PETW_SYSTEM_LOGGER; 

typedef struct _PERFINFO_GROUPMASK
{
  U32 Masks[8];
} PERFINFO_GROUPMASK, *PPERFINFO_GROUPMASK; 

typedef struct _ETW_SYSTEM_LOGGER_SETTINGS
{
  struct _ETW_SYSTEM_LOGGER EtwpSystemLogger[8];
  volatile U32 EtwpActiveSystemLoggers;
  struct _PERFINFO_GROUPMASK SiloGlobalGroupMask;
  struct _PERFINFO_GROUPMASK EtwpGroupMasks[10];
} ETW_SYSTEM_LOGGER_SETTINGS, *PETW_SYSTEM_LOGGER_SETTINGS; 

typedef struct _DISPATCHER_HEADER
{
  union
  {
    volatile S32 Lock;
    S32 LockNV;
    struct
    {
      U8 Type;
      U8 Signalling;
      U8 Size;
      U8 Reserved1;
    }; 
    struct
    {
      U8 TimerType;
      union
      {
        U8 TimerControlFlags;
        struct
        {
          struct 
          {
            U8 Absolute : 1; 
            U8 Wake : 1; 
            U8 EncodedTolerableDelay : 6; 
          }; 
          U8 Hand;
          union
          {
            U8 TimerMiscFlags;
            struct 
            {
              U8 Index : 6; 
              U8 Inserted : 1; 
              volatile U8 Expired : 1; 
            }; 
          }; 
        }; 
      }; 
    }; 
    struct
    {
      U8 Timer2Type;
      union
      {
        U8 Timer2Flags;
        struct
        {
          struct 
          {
            U8 Timer2Inserted : 1; 
            U8 Timer2Expiring : 1; 
            U8 Timer2CancelPending : 1; 
            U8 Timer2SetPending : 1; 
            U8 Timer2Running : 1; 
            U8 Timer2Disabled : 1; 
            U8 Timer2ReservedFlags : 2; 
          }; 
          U8 Timer2ComponentId;
          U8 Timer2RelativeId;
        }; 
      }; 
    }; 
    struct
    {
      U8 QueueType;
      union
      {
        U8 QueueControlFlags;
        struct
        {
          struct 
          {
            U8 Abandoned : 1; 
            U8 DisableIncrement : 1; 
            U8 QueueReservedControlFlags : 6; 
          }; 
          U8 QueueSize;
          U8 QueueReserved;
        }; 
      }; 
    }; 
    struct
    {
      U8 ThreadType;
      U8 ThreadReserved;
      union
      {
        U8 ThreadControlFlags;
        struct
        {
          struct 
          {
            U8 CycleProfiling : 1; 
            U8 CounterProfiling : 1; 
            U8 GroupScheduling : 1; 
            U8 AffinitySet : 1; 
            U8 Tagged : 1; 
            U8 EnergyProfiling : 1; 
            U8 SchedulerAssist : 1; 
            U8 ThreadReservedControlFlags : 1; 
          }; 
          union
          {
            U8 DebugActive;
            struct 
            {
              U8 ActiveDR7 : 1; 
              U8 Instrumented : 1; 
              U8 Minimal : 1; 
              U8 Reserved4 : 3; 
              U8 UmsScheduled : 1; 
              U8 UmsPrimary : 1; 
            }; 
          }; 
        }; 
      }; 
    }; 
    struct
    {
      U8 MutantType;
      U8 MutantSize;
      U8 DpcActive;
      U8 MutantReserved;
    }; 
  }; 
  S32 SignalState;
  struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; 

typedef struct _KMUTANT
{
  struct _DISPATCHER_HEADER Header;
  struct _LIST_ENTRY MutantListEntry;
  struct _KTHREAD* OwnerThread;
  union
  {
    U8 MutantFlags;
    struct 
    {
      U8 Abandoned : 1; 
      U8 Spare1 : 7; 
    }; 
    struct 
    {
      U8 Abandoned2 : 1; 
      U8 AbEnabled : 1; 
      U8 Spare2 : 6; 
    }; 
  }; 
  U8 ApcDisable;
  char __PADDING__[6];
} KMUTANT, *PKMUTANT; 

typedef struct _ETW_SILODRIVERSTATE
{
  struct _EJOB* Silo;
  struct _ESERVERSILO_GLOBALS* SiloGlobals;
  U32 MaxLoggers;
  struct _ETW_GUID_ENTRY EtwpSecurityProviderGuidEntry;
  struct _EX_RUNDOWN_REF_CACHE_AWARE** EtwpLoggerRundown;
  struct _WMI_LOGGER_CONTEXT** EtwpLoggerContext;
  struct _ETW_HASH_BUCKET EtwpGuidHashTable[64];
  U16 EtwpSecurityLoggers[8];
  U8 EtwpSecurityProviderEnableMask;
  S32 EtwpShutdownInProgress;
  U32 EtwpSecurityProviderPID;
  struct _ETW_PRIV_HANDLE_DEMUX_TABLE PrivHandleDemuxTable;
  struct _ETW_COUNTERS EtwpCounters;
  union _LARGE_INTEGER LogfileBytesWritten;
  struct _ETW_SILO_TRACING_BLOCK* ProcessorBlocks;
  struct _EX_WNF_SUBSCRIPTION* ContainerRestoreWnfSubscription;
  struct _GUID PartitionId;
  struct _GUID ParentId;
  union _LARGE_INTEGER QpcOffsetFromRoot;
  U32 PartitionType;
  struct _ETW_SYSTEM_LOGGER_SETTINGS SystemLoggerSettings;
  struct _KMUTANT EtwpStartTraceMutex;
} ETW_SILODRIVERSTATE, *PETW_SILODRIVERSTATE; 

