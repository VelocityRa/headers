typedef enum _RTLP_HP_ADDRESS_SPACE_TYPE
{
  HeapAddressUser = 0,
  HeapAddressKernel = 1,
  HeapAddressSession = 2,
  HeapAddressSecureKernel = 3,
  HeapAddressTypeMax = 4,
} RTLP_HP_ADDRESS_SPACE_TYPE, *PRTLP_HP_ADDRESS_SPACE_TYPE;

typedef struct _RTL_CSPARSE_BITMAP
{
  U64* CommitBitmap;
  U64* UserBitmap;
  U64 BitCount;
  U64 BitmapLock;
  U64 DecommitPageIndex;
  U64 RtlpCSparseBitmapWakeLock;
  U8 LockType;
  U8 AddressSpace;
  U8 MemType;
  U8 AllocAlignment;
  U32 CommitDirectoryMaxSize;
  U64 CommitDirectory[1];
} RTL_CSPARSE_BITMAP, *PRTL_CSPARSE_BITMAP; 

typedef struct _RTL_SPARSE_ARRAY
{
  U64 ElementCount;
  U32 ElementSizeShift;
  struct _RTL_CSPARSE_BITMAP Bitmap;
} RTL_SPARSE_ARRAY, *PRTL_SPARSE_ARRAY; 

typedef struct _HEAP_VAMGR_VASPACE
{
  enum _RTLP_HP_ADDRESS_SPACE_TYPE AddressSpaceType;
  U64 BaseAddress;
  union
  {
    struct _RTL_SPARSE_ARRAY VaRangeArray;
    U8 VaRangeArrayBuffer[2128];
  }; 
} HEAP_VAMGR_VASPACE, *PHEAP_VAMGR_VASPACE; 

