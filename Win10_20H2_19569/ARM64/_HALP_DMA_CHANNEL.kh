typedef enum _DMA_INTERRUPT_TYPE
{
  InterruptTypeCompletion = 0,
  InterruptTypeError = 1,
  InterruptTypeCancelled = 2,
} DMA_INTERRUPT_TYPE, *PDMA_INTERRUPT_TYPE;

typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef struct _KDPC
{
  union
  {
    U32 TargetInfoAsUlong;
    struct
    {
      U8 Type;
      U8 Importance;
      volatile U16 Number;
    }; 
  }; 
  struct _SINGLE_LIST_ENTRY DpcListEntry;
  U64 ProcessorHistory;
  void* DeferredRoutine;
  void* DeferredContext;
  void* SystemArgument1;
  void* SystemArgument2;
  void* DpcData;
} KDPC, *PKDPC; 

typedef enum _KINTERRUPT_POLARITY
{
  InterruptPolarityUnknown = 0,
  InterruptActiveHigh = 1,
  InterruptRisingEdge = 1,
  InterruptActiveLow = 2,
  InterruptFallingEdge = 2,
  InterruptActiveBoth = 3,
  InterruptActiveBothTriggerLow = 3,
  InterruptActiveBothTriggerHigh = 4,
} KINTERRUPT_POLARITY, *PKINTERRUPT_POLARITY;

typedef enum _KINTERRUPT_MODE
{
  LevelSensitive = 0,
  Latched = 1,
} KINTERRUPT_MODE, *PKINTERRUPT_MODE;

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _HALP_DMA_CHANNEL
{
  U32 ChannelNumber;
  U8 Initialized;
  U8 Busy;
  U8 Complete;
  void* CurrentCompletionRoutine;
  void* CurrentCompletionContext;
  struct _ADAPTER_OBJECT* CurrentChildAdapter;
  enum _DMA_INTERRUPT_TYPE CurrentInterruptType;
  struct _KDPC Dpc;
  U8 GeneratesInterrupt;
  S32 Gsi;
  enum _KINTERRUPT_POLARITY InterruptPolarity;
  enum _KINTERRUPT_MODE InterruptMode;
  U32 CommonBufferLength;
  void* CommonBufferVirtualAddress;
  union _LARGE_INTEGER CommonBufferLogicalAddress;
  struct _LIST_ENTRY AdapterQueue;
} HALP_DMA_CHANNEL, *PHALP_DMA_CHANNEL; 

