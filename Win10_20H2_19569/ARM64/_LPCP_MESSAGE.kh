typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef struct _CLIENT_ID
{
  void* UniqueProcess;
  void* UniqueThread;
} CLIENT_ID, *PCLIENT_ID; 

typedef struct _PORT_MESSAGE
{
  union
  {
    union
    {
      struct
      {
        S16 DataLength;
        S16 TotalLength;
      } s1;
      U32 Length;
    }; 
  } u1;
  union
  {
    union
    {
      struct
      {
        S16 Type;
        S16 DataInfoOffset;
      } s2;
      U32 ZeroInit;
    }; 
  } u2;
  union
  {
    struct _CLIENT_ID ClientId;
    double DoNotUseThisField;
  }; 
  U32 MessageId;
  union
  {
    U64 ClientViewSize;
    struct
    {
      U32 CallbackId;
      S32 __PADDING__[1];
    }; 
  }; 
} PORT_MESSAGE, *PPORT_MESSAGE; 

typedef struct _LPCP_MESSAGE
{
  union
  {
    struct _LIST_ENTRY Entry;
    struct
    {
      struct _SINGLE_LIST_ENTRY FreeEntry;
      U32 Reserved0;
    }; 
  }; 
  void* SenderPort;
  struct _ETHREAD* RepliedToThread;
  void* PortContext;
  struct _PORT_MESSAGE Request;
} LPCP_MESSAGE, *PLPCP_MESSAGE; 

