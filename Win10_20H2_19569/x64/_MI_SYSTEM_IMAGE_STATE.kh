typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _EX_PUSH_LOCK
{
  union
  {
    struct 
    {
      U64 Locked : 1; 
      U64 Waiting : 1; 
      U64 Waking : 1; 
      U64 MultipleShared : 1; 
      U64 Shared : 60; 
    }; 
    U64 Value;
    void* Ptr;
  }; 
} EX_PUSH_LOCK, *PEX_PUSH_LOCK; 

typedef struct _MM_SYSTEM_PAGE_COUNTS
{
  U32 SystemCodePage;
  U32 SystemDriverPage;
  S32 TotalSystemCodePages;
  S32 TotalSystemDriverPages;
} MM_SYSTEM_PAGE_COUNTS, *PMM_SYSTEM_PAGE_COUNTS; 

typedef struct _RTL_AVL_TREE
{
  struct _RTL_BALANCED_NODE* Root;
} RTL_AVL_TREE, *PRTL_AVL_TREE; 

typedef struct _MI_SYSTEM_IMAGE_STATE
{
  struct _LIST_ENTRY FixupList;
  struct _EX_PUSH_LOCK LoadLock;
  struct _ETHREAD* LoadLockOwner;
  U32 LoadLockCount;
  volatile S32 FixupLock;
  U8 FirstLoadEver;
  U8 LargePageAll;
  U64 LastPage;
  struct _LIST_ENTRY LargePageList;
  struct _LIST_ENTRY StrongCodeLoadFailureList;
  struct _KLDR_DATA_TABLE_ENTRY* SystemBase[1];
  struct _KLDR_DATA_TABLE_ENTRY* BeingDeleted;
  struct _EX_PUSH_LOCK MappingRangesPushLock;
  struct _MI_DRIVER_VA* MappingRanges[2];
  U64 PageCount;
  struct _MM_SYSTEM_PAGE_COUNTS PageCounts;
  struct _EX_PUSH_LOCK CollidedLock;
  struct _RTL_AVL_TREE ImageTree;
} MI_SYSTEM_IMAGE_STATE, *PMI_SYSTEM_IMAGE_STATE; 

