typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef union _PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA
{
  union
  {
    struct
    {
      U32 CapturedCpuShareWeight;
      U32 CapturedTotalWeight;
    }; 
    S64 CombinedData;
  }; 
} PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA, *PPSP_CPU_SHARE_CAPTURED_WEIGHT_DATA; 

typedef struct _PS_PER_CPU_QUOTA_CACHE_AWARE
{
  struct _LIST_ENTRY SortedListEntry;
  struct _LIST_ENTRY IdleOnlyListHead;
  U64 CycleBaseAllowance;
  S64 CyclesRemaining;
  U32 CurrentGeneration;
  S32 __PADDING__[3];
} PS_PER_CPU_QUOTA_CACHE_AWARE, *PPS_PER_CPU_QUOTA_CACHE_AWARE; 

typedef struct _PS_CPU_QUOTA_BLOCK
{
  union
  {
    struct
    {
      struct _LIST_ENTRY ListEntry;
      U32 SessionId;
      U32 CpuShareWeight;
      union _PSP_CPU_SHARE_CAPTURED_WEIGHT_DATA CapturedWeightData;
      union
      {
        struct 
        {
          U32 DuplicateInputMarker : 1; 
          U32 Reserved : 31; 
        }; 
        S32 MiscFlags;
      }; 
    }; 
    struct
    {
      U64 BlockCurrentGenerationLock;
      U64 CyclesAccumulated;
      U64 CycleCredit;
      U32 BlockCurrentGeneration;
      U32 CpuCyclePercent;
      U8 CyclesFinishedForCurrentGeneration;
      struct _PS_PER_CPU_QUOTA_CACHE_AWARE Cpu[256];
    }; 
  }; 
} PS_CPU_QUOTA_BLOCK, *PPS_CPU_QUOTA_BLOCK; 

