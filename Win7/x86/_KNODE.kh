typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef union _SLIST_HEADER
{
  union
  {
    U64 Alignment;
    struct
    {
      struct _SINGLE_LIST_ENTRY Next;
      U16 Depth;
      U16 Sequence;
    }; 
  }; 
} SLIST_HEADER, *PSLIST_HEADER; 

typedef struct _GROUP_AFFINITY
{
  U32 Mask;
  U16 Group;
  U16 Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY; 

typedef struct _flags
{
  struct 
  {
    U8 Removable : 1; 
    U8 GroupAssigned : 1; 
    U8 GroupCommitted : 1; 
    U8 GroupAssignmentFixed : 1; 
    U8 Fill : 4; 
  }; 
} flags, *Pflags; 

typedef struct _CACHED_KSTACK_LIST
{
  union _SLIST_HEADER SListHead;
  S32 MinimumFree;
  U32 Misses;
  U32 MissesLast;
  U32 Pad0;
} CACHED_KSTACK_LIST, *PCACHED_KSTACK_LIST; 

typedef struct _KNODE
{
  union _SLIST_HEADER PagedPoolSListHead;
  union _SLIST_HEADER NonPagedPoolSListHead[3];
  struct _GROUP_AFFINITY Affinity;
  U32 ProximityId;
  U16 NodeNumber;
  U16 PrimaryNodeNumber;
  U8 MaximumProcessors;
  U8 Color;
  struct _flags Flags;
  U8 NodePad0;
  U32 Seed;
  U32 MmShiftedColor;
  volatile U32 FreeCount[2];
  struct _CACHED_KSTACK_LIST CachedKernelStacks;
  S32 ParkLock;
  U32 NodePad1;
  S32 __PADDING__[6];
} KNODE, *PKNODE; 

