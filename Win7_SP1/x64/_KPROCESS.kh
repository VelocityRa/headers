typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _DISPATCHER_HEADER
{
  union
  {
    struct
    {
      U8 Type;
      union
      {
        U8 TimerControlFlags;
        struct 
        {
          U8 Absolute : 1; 
          U8 Coalescable : 1; 
          U8 KeepShifting : 1; 
          U8 EncodedTolerableDelay : 5; 
        }; 
        U8 Abandoned;
        struct
        {
          U8 Signalling;
          union
          {
            U8 ThreadControlFlags;
            struct 
            {
              U8 CpuThrottled : 1; 
              U8 CycleProfiling : 1; 
              U8 CounterProfiling : 1; 
              U8 Reserved : 5; 
            }; 
            U8 Hand;
            struct
            {
              U8 Size;
              union
              {
                U8 TimerMiscFlags;
                struct 
                {
                  U8 Index : 6; 
                  U8 Inserted : 1; 
                  volatile U8 Expired : 1; 
                }; 
                U8 DebugActive;
                struct 
                {
                  U8 ActiveDR7 : 1; 
                  U8 Instrumented : 1; 
                  U8 Reserved2 : 4; 
                  U8 UmsScheduled : 1; 
                  U8 UmsPrimary : 1; 
                }; 
                U8 DpcActive;
              }; 
            }; 
          }; 
        }; 
      }; 
    }; 
    volatile S32 Lock;
  }; 
  S32 SignalState;
  struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; 

typedef struct _KAFFINITY_EX
{
  U16 Count;
  U16 Size;
  U32 Reserved;
  U64 Bitmap[4];
} KAFFINITY_EX, *PKAFFINITY_EX; 

typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef union _KEXECUTE_OPTIONS
{
  union
  {
    struct 
    {
      U8 ExecuteDisable : 1; 
      U8 ExecuteEnable : 1; 
      U8 DisableThunkEmulation : 1; 
      U8 Permanent : 1; 
      U8 ExecuteDispatchEnable : 1; 
      U8 ImageDispatchEnable : 1; 
      U8 DisableExceptionChainValidation : 1; 
      U8 Spare : 1; 
    }; 
    volatile U8 ExecuteOptions;
  }; 
} KEXECUTE_OPTIONS, *PKEXECUTE_OPTIONS; 

typedef union _KSTACK_COUNT
{
  union
  {
    volatile S32 Value;
    struct 
    {
      volatile U32 State : 3; 
      U32 StackCount : 29; 
    }; 
  }; 
} KSTACK_COUNT, *PKSTACK_COUNT; 

typedef union _KGDTENTRY64
{
  union
  {
    struct
    {
      U16 LimitLow;
      U16 BaseLow;
      union
      {
        struct
        {
          U8 BaseMiddle;
          U8 Flags1;
          U8 Flags2;
          U8 BaseHigh;
        } Bytes;
        struct
        {
          struct
          {
            struct 
            {
              U32 BaseMiddle : 8; 
              U32 Type : 5; 
              U32 Dpl : 2; 
              U32 Present : 1; 
              U32 LimitHigh : 4; 
              U32 System : 1; 
              U32 LongMode : 1; 
              U32 DefaultBig : 1; 
              U32 Granularity : 1; 
              U32 BaseHigh : 8; 
            }; 
          } Bits;
          U32 BaseUpper;
          U32 MustBeZero;
        }; 
      }; 
    }; 
    U64 Alignment;
  }; 
} KGDTENTRY64, *PKGDTENTRY64; 

typedef struct _KGATE
{
  struct _DISPATCHER_HEADER Header;
} KGATE, *PKGATE; 

typedef struct _KGUARDED_MUTEX
{
  volatile S32 Count;
  struct _KTHREAD* Owner;
  U32 Contention;
  struct _KGATE Gate;
  union
  {
    struct
    {
      S16 KernelApcDisable;
      S16 SpecialApcDisable;
    }; 
    U32 CombinedApcDisable;
  }; 
  S32 __PADDING__[1];
} KGUARDED_MUTEX, *PKGUARDED_MUTEX; 

typedef struct _KPROCESS
{
  struct _DISPATCHER_HEADER Header;
  struct _LIST_ENTRY ProfileListHead;
  U64 DirectoryTableBase;
  struct _LIST_ENTRY ThreadListHead;
  U64 ProcessLock;
  struct _KAFFINITY_EX Affinity;
  struct _LIST_ENTRY ReadyListHead;
  struct _SINGLE_LIST_ENTRY SwapListEntry;
  volatile struct _KAFFINITY_EX ActiveProcessors;
  union
  {
    struct 
    {
      volatile S32 AutoAlignment : 1; 
      volatile S32 DisableBoost : 1; 
      volatile S32 DisableQuantum : 1; 
      volatile U32 ActiveGroupsMask : 4; 
      volatile S32 ReservedFlags : 25; 
    }; 
    volatile S32 ProcessFlags;
  }; 
  char BasePriority;
  char QuantumReset;
  U8 Visited;
  U8 Unused3;
  U32 ThreadSeed[4];
  U16 IdealNode[4];
  U16 IdealGlobalNode;
  union _KEXECUTE_OPTIONS Flags;
  U8 Unused1;
  U32 Unused2;
  U32 Unused4;
  union _KSTACK_COUNT StackCount;
  struct _LIST_ENTRY ProcessListEntry;
  volatile U64 CycleTime;
  U32 KernelTime;
  U32 UserTime;
  void* InstrumentationCallback;
  union _KGDTENTRY64 LdtSystemDescriptor;
  void* LdtBaseAddress;
  struct _KGUARDED_MUTEX LdtProcessLock;
  U16 LdtFreeSelectorHint;
  U16 LdtTableLength;
  S32 __PADDING__[1];
} KPROCESS, *PKPROCESS; 

