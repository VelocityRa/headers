typedef struct _CM_KEY_HASH
{
  U32 ConvKey;
  struct _CM_KEY_HASH* NextHash;
  struct _HHIVE* KeyHive;
  U32 KeyCell;
} CM_KEY_HASH, *PCM_KEY_HASH; 

typedef struct _EX_PUSH_LOCK
{
  union
  {
    struct 
    {
      U32 Locked : 1; 
      U32 Waiting : 1; 
      U32 Waking : 1; 
      U32 MultipleShared : 1; 
      U32 Shared : 28; 
    }; 
    U32 Value;
    void* Ptr;
  }; 
} EX_PUSH_LOCK, *PEX_PUSH_LOCK; 

typedef struct _CACHED_CHILD_LIST
{
  U32 Count;
  union
  {
    U32 ValueList;
    struct _CM_KEY_CONTROL_BLOCK* RealKcb;
  }; 
} CACHED_CHILD_LIST, *PCACHED_CHILD_LIST; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _CM_INTENT_LOCK
{
  U32 OwnerCount;
  struct _CM_KCB_UOW** OwnerTable;
} CM_INTENT_LOCK, *PCM_INTENT_LOCK; 

typedef struct _CHILD_LIST
{
  U32 Count;
  U32 List;
} CHILD_LIST, *PCHILD_LIST; 

typedef struct _CM_KEY_CONTROL_BLOCK
{
  U32 RefCount;
  struct 
  {
    U32 ExtFlags : 16; 
    U32 PrivateAlloc : 1; 
    U32 Delete : 1; 
    U32 HiveUnloaded : 1; 
    U32 Decommissioned : 1; 
    U32 LockTablePresent : 1; 
    U32 TotalLevels : 10; 
  }; 
  struct 
  {
    U32 DelayedDeref : 1; 
    U32 DelayedClose : 1; 
    U32 Parking : 1; 
  }; 
  union
  {
    struct _CM_KEY_HASH KeyHash;
    struct
    {
      U32 ConvKey;
      struct _CM_KEY_HASH* NextHash;
      struct _HHIVE* KeyHive;
      U32 KeyCell;
    }; 
  }; 
  struct _EX_PUSH_LOCK KcbPushlock;
  union
  {
    struct _KTHREAD* Owner;
    S32 SharedCount;
  }; 
  U32 SlotHint;
  struct _CM_KEY_CONTROL_BLOCK* ParentKcb;
  struct _CM_NAME_CONTROL_BLOCK* NameBlock;
  struct _CM_KEY_SECURITY_CACHE* CachedSecurity;
  struct _CACHED_CHILD_LIST ValueCache;
  union
  {
    struct _CM_INDEX_HINT_BLOCK* IndexHint;
    U32 HashKey;
    U32 SubKeyCount;
  }; 
  union
  {
    struct _LIST_ENTRY KeyBodyListHead;
    struct _LIST_ENTRY FreeListEntry;
  }; 
  struct _CM_KEY_BODY* KeyBodyArray[4];
  union _LARGE_INTEGER KcbLastWriteTime;
  U16 KcbMaxNameLen;
  U16 KcbMaxValueNameLen;
  U32 KcbMaxValueDataLen;
  struct 
  {
    U32 KcbUserFlags : 4; 
    U32 KcbVirtControlFlags : 4; 
    U32 KcbDebug : 8; 
    U32 Flags : 16; 
  }; 
  struct _LIST_ENTRY KCBUoWListHead;
  union
  {
    struct _LIST_ENTRY DelayQueueEntry;
    volatile U8* Stolen;
  }; 
  struct _CM_TRANS* TransKCBOwner;
  struct _CM_INTENT_LOCK KCBLock;
  struct _CM_INTENT_LOCK KeyLock;
  struct _CHILD_LIST TransValueCache;
  struct _CM_TRANS* TransValueListOwner;
  struct _UNICODE_STRING* FullKCBName;
} CM_KEY_CONTROL_BLOCK, *PCM_KEY_CONTROL_BLOCK; 

