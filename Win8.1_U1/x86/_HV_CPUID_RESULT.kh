typedef struct _HV_VENDOR_AND_MAX_FUNCTION
{
  U32 MaxFunction;
  U8 VendorName[12];
} HV_VENDOR_AND_MAX_FUNCTION, *PHV_VENDOR_AND_MAX_FUNCTION; 

typedef struct _HV_HYPERVISOR_INTERFACE_INFO
{
  U32 Interface;
  U32 ReservedEbx;
  U32 ReservedEcx;
  U32 ReservedEdx;
} HV_HYPERVISOR_INTERFACE_INFO, *PHV_HYPERVISOR_INTERFACE_INFO; 

typedef struct _HV_HYPERVISOR_VERSION_INFO
{
  U32 BuildNumber;
  struct 
  {
    U32 MinorVersion : 16; 
    U32 MajorVersion : 16; 
  }; 
  U32 ServicePack;
  struct 
  {
    U32 ServiceNumber : 24; 
    U32 ServiceBranch : 8; 
  }; 
} HV_HYPERVISOR_VERSION_INFO, *PHV_HYPERVISOR_VERSION_INFO; 

typedef union _HV_PARTITION_PRIVILEGE_MASK
{
  union
  {
    U64 AsUINT64;
    struct 
    {
      U64 AccessVpRunTimeMsr : 1; 
      U64 AccessPartitionReferenceCounter : 1; 
      U64 AccessSynicMsrs : 1; 
      U64 AccessSyntheticTimerMsrs : 1; 
      U64 AccessApicMsrs : 1; 
      U64 AccessHypercallMsrs : 1; 
      U64 AccessVpIndex : 1; 
      U64 AccessResetMsr : 1; 
      U64 AccessStatsMsr : 1; 
      U64 AccessPartitionReferenceTsc : 1; 
      U64 AccessGuestIdleMsr : 1; 
      U64 AccessFrequencyMsrs : 1; 
      U64 AccessDebugMsrs : 1; 
      U64 Reserved1 : 19; 
      U64 CreatePartitions : 1; 
      U64 AccessPartitionId : 1; 
      U64 AccessMemoryPool : 1; 
      U64 AdjustMessageBuffers : 1; 
      U64 PostMessages : 1; 
      U64 SignalEvents : 1; 
      U64 CreatePort : 1; 
      U64 ConnectPort : 1; 
      U64 AccessStats : 1; 
      U64 Reserved2 : 2; 
      U64 Debugging : 1; 
      U64 CpuManagement : 1; 
      U64 ConfigureProfiler : 1; 
      U64 EnableExpandedStackwalking : 1; 
      U64 Reserved3 : 17; 
    }; 
  }; 
} HV_PARTITION_PRIVILEGE_MASK, *PHV_PARTITION_PRIVILEGE_MASK; 

typedef struct _HV_HYPERVISOR_FEATURES
{
  union _HV_PARTITION_PRIVILEGE_MASK PartitionPrivileges;
  struct 
  {
    U32 MaxSupportedCState : 4; 
    U32 HpetNeededForC3PowerState : 1; 
    U32 Reserved : 27; 
  }; 
  struct 
  {
    U32 MwaitAvailable : 1; 
    U32 GuestDebuggingAvailable : 1; 
    U32 PerformanceMonitorsAvailable : 1; 
    U32 CpuDynamicPartitioningAvailable : 1; 
    U32 XmmRegistersForFastHypercallAvailable : 1; 
    U32 GuestIdleAvailable : 1; 
    U32 HypervisorSleepStateSupportAvailable : 1; 
    U32 NumaDistanceQueryAvailable : 1; 
    U32 FrequencyMsrsAvailable : 1; 
    U32 SyntheticMachineCheckAvailable : 1; 
    U32 GuestCrashMsrsAvailable : 1; 
    U32 DebugMsrsAvailable : 1; 
    U32 Npiep1Available : 1; 
    U32 DisableHypervisorAvailable : 1; 
    U32 Reserved1 : 18; 
  }; 
} HV_HYPERVISOR_FEATURES, *PHV_HYPERVISOR_FEATURES; 

typedef struct _HV_ENLIGHTENMENT_INFORMATION
{
  struct 
  {
    U32 UseHypercallForAddressSpaceSwitch : 1; 
    U32 UseHypercallForLocalFlush : 1; 
    U32 UseHypercallForRemoteFlush : 1; 
    U32 UseApicMsrs : 1; 
    U32 UseMsrForReset : 1; 
    U32 UseRelaxedTiming : 1; 
    U32 UseDmaRemapping : 1; 
    U32 UseInterruptRemapping : 1; 
    U32 UseX2ApicMsrs : 1; 
    U32 DeprecateAutoEoi : 1; 
    U32 Reserved : 22; 
  }; 
  U32 LongSpinWaitCount;
  U32 ReservedEcx;
  U32 ReservedEdx;
} HV_ENLIGHTENMENT_INFORMATION, *PHV_ENLIGHTENMENT_INFORMATION; 

typedef struct _HV_IMPLEMENTATION_LIMITS
{
  U32 MaxVirtualProcessorCount;
  U32 MaxLogicalProcessorCount;
  U32 MaxInterruptMappingCount;
  U32 ReservedEdx;
} HV_IMPLEMENTATION_LIMITS, *PHV_IMPLEMENTATION_LIMITS; 

typedef struct _HV_HYPERVISOR_HARDWARE_FEATURES
{
  struct 
  {
    U32 ApicOverlayAssistInUse : 1; 
    U32 MsrBitmapsInUse : 1; 
    U32 ArchitecturalPerformanceCountersInUse : 1; 
    U32 SecondLevelAddressTranslationInUse : 1; 
    U32 DmaRemappingInUse : 1; 
    U32 InterruptRemappingInUse : 1; 
    U32 MemoryPatrolScrubberPresent : 1; 
    U32 Reserved : 25; 
  }; 
  U32 ReservedEbx;
  U32 ReservedEcx;
  U32 ReservedEdx;
} HV_HYPERVISOR_HARDWARE_FEATURES, *PHV_HYPERVISOR_HARDWARE_FEATURES; 

typedef union _HV_CPUID_RESULT
{
  union
  {
    struct
    {
      U32 Eax;
      U32 Ebx;
      U32 Ecx;
      U32 Edx;
    }; 
    U32 AsUINT32[4];
    struct
    {
      U32 ReservedEax;
      struct 
      {
        U32 ReservedEbx : 24; 
        U32 InitialApicId : 8; 
      }; 
      struct 
      {
        U32 ReservedEcx : 31; 
        U32 HypervisorPresent : 1; 
      }; 
      U32 ReservedEdx;
    } VersionAndFeatures;
    struct _HV_VENDOR_AND_MAX_FUNCTION HvVendorAndMaxFunction;
    struct _HV_HYPERVISOR_INTERFACE_INFO HvInterface;
    struct _HV_HYPERVISOR_VERSION_INFO MsHvVersion;
    struct _HV_HYPERVISOR_FEATURES MsHvFeatures;
    struct _HV_ENLIGHTENMENT_INFORMATION MsHvEnlightenmentInformation;
    struct _HV_IMPLEMENTATION_LIMITS MsHvImplementationLimits;
    struct _HV_HYPERVISOR_HARDWARE_FEATURES MsHvHardwareFeatures;
  }; 
} HV_CPUID_RESULT, *PHV_CPUID_RESULT; 

