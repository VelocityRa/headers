typedef struct _flags
{
  struct 
  {
    U8 Removable : 1; 
    U8 GroupAssigned : 1; 
    U8 GroupCommitted : 1; 
    U8 GroupAssignmentFixed : 1; 
    U8 Fill : 4; 
  }; 
} flags, *Pflags; 

typedef struct _GROUP_AFFINITY
{
  U64 Mask;
  U16 Group;
  U16 Reserved[3];
} GROUP_AFFINITY, *PGROUP_AFFINITY; 

typedef struct _KNODE
{
  U64 DeepIdleSet;
  U32 ProximityId;
  U16 NodeNumber;
  U16 PrimaryNodeNumber;
  U8 MaximumProcessors;
  struct _flags Flags;
  U8 Stride;
  U8 NodePad0;
  struct _GROUP_AFFINITY Affinity;
  U64 IdleCpuSet;
  U64 IdleSmtSet;
  U32 Seed;
  U32 Lowest;
  U32 Highest;
  S32 ParkLock;
  U64 NonParkedSet;
  S32 __PADDING__[10];
} KNODE, *PKNODE; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _DISPATCHER_HEADER
{
  union
  {
    struct
    {
      U8 Type;
      union
      {
        U8 TimerControlFlags;
        struct 
        {
          U8 Absolute : 1; 
          U8 Wake : 1; 
          U8 EncodedTolerableDelay : 6; 
        }; 
        U8 Abandoned;
        struct
        {
          U8 Signalling;
          union
          {
            U8 ThreadControlFlags;
            struct 
            {
              U8 CycleProfiling : 1; 
              U8 CounterProfiling : 1; 
              U8 GroupScheduling : 1; 
              U8 AffinitySet : 1; 
              U8 Reserved : 4; 
            }; 
            U8 Hand;
            struct
            {
              U8 Size;
              union
              {
                U8 TimerMiscFlags;
                struct 
                {
                  U8 Index : 6; 
                  U8 Inserted : 1; 
                  volatile U8 Expired : 1; 
                }; 
                U8 DebugActive;
                struct 
                {
                  U8 ActiveDR7 : 1; 
                  U8 Instrumented : 1; 
                  U8 Reserved2 : 4; 
                  U8 UmsScheduled : 1; 
                  U8 UmsPrimary : 1; 
                }; 
                U8 DpcActive;
              }; 
            }; 
          }; 
        }; 
      }; 
    }; 
    volatile S32 Lock;
    S32 LockNV;
  }; 
  S32 SignalState;
  struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; 

typedef struct _KQUEUE
{
  struct _DISPATCHER_HEADER Header;
  struct _LIST_ENTRY EntryListHead;
  volatile U32 CurrentCount;
  U32 MaximumCount;
  struct _LIST_ENTRY ThreadListHead;
} KQUEUE, *PKQUEUE; 

typedef struct _EX_WORK_QUEUE
{
  struct _KQUEUE WorkerQueue;
  volatile U32 WorkItemsProcessed;
  U32 WorkItemsProcessedLastPass;
  volatile S32 ThreadCount;
  volatile U8 TryFailed;
  char __PADDING__[3];
} EX_WORK_QUEUE, *PEX_WORK_QUEUE; 

typedef struct _KEVENT
{
  struct _DISPATCHER_HEADER Header;
} KEVENT, *PKEVENT; 

typedef struct _ENODE
{
  struct _KNODE Ncb;
  struct _EX_WORK_QUEUE ExWorkerQueues[7];
  struct _KEVENT ExpThreadSetManagerEvent;
  struct _ETHREAD* ExpWorkerThreadBalanceManagerPtr;
  U32 ExpWorkerSeed;
  union
  {
    struct 
    {
      volatile U32 ExWorkerFullInit : 1; 
      volatile U32 ExWorkerStructInit : 1; 
    }; 
    volatile U32 ExWorkerFlags;
  }; 
  S32 __PADDING__[10];
} ENODE, *PENODE; 

