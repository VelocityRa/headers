typedef enum _CM_LOAD_FAILURE_TYPE
{
  _None = 0,
  _CmInitializeHive = 1,
  _HvInitializeHive = 2,
  _HvpBuildMap = 3,
  _HvpBuildMapAndCopy = 4,
  _HvpInitMap = 5,
  _HvLoadHive = 6,
  _HvpReadFileImageAndBuildMap = 7,
  _HvpRecoverData = 8,
  _CmpValidateHiveSecurityDescriptors = 9,
  _HvpEnlistBinInMap = 10,
  _CmCheckRegistry = 11,
  _CmRegistryIO = 12,
  _CmCheckRegistry2 = 13,
  _CmpCheckKey = 14,
  _CmpCheckValueList = 15,
  _HvCheckHive = 16,
  _HvCheckBin = 17,
} CM_LOAD_FAILURE_TYPE, *PCM_LOAD_FAILURE_TYPE;

typedef struct _HIVE_LOAD_FAILURE
{
  struct _HHIVE* Hive;
  U32 Index;
  U32 RecoverableIndex;
  struct
  {
    enum _CM_LOAD_FAILURE_TYPE Failure;
    S32 Status;
    U32 Point;
  } Locations[8];
  struct
  {
    enum _CM_LOAD_FAILURE_TYPE Failure;
    S32 Status;
    U32 Point;
  } RecoverableLocations[8];
  struct
  {
    U32 Action;
    void* Handle;
    S32 Status;
    S32 __PADDING__[1];
  } RegistryIO;
  struct
  {
    void* CheckStack;
  } CheckRegistry2;
  struct
  {
    U32 Cell;
    struct _CELL_DATA* CellPoint;
    void* RootPoint;
    U32 Index;
    S32 __PADDING__[1];
  } CheckKey;
  struct
  {
    struct _CELL_DATA* List;
    U32 Index;
    U32 Cell;
    struct _CELL_DATA* CellPoint;
  } CheckValueList;
  struct
  {
    U32 Space;
    U32 MapPoint;
    struct _HBIN* BinPoint;
  } CheckHive;
  struct
  {
    U32 Space;
    U32 MapPoint;
    struct _HBIN* BinPoint;
  } CheckHive1;
  struct
  {
    struct _HBIN* Bin;
    struct _HCELL* CellPoint;
  } CheckBin;
  struct
  {
    U32 FileOffset;
  } RecoverData;
  S32 __PADDING__[1];
} HIVE_LOAD_FAILURE, *PHIVE_LOAD_FAILURE; 

