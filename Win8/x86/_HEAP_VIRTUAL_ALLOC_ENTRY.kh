typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _HEAP_ENTRY_EXTRA
{
  union
  {
    struct
    {
      U16 AllocatorBackTraceIndex;
      U16 TagIndex;
      U32 Settable;
    }; 
    U64 ZeroInit;
  }; 
} HEAP_ENTRY_EXTRA, *PHEAP_ENTRY_EXTRA; 

typedef struct _HEAP_ENTRY
{
  union
  {
    struct
    {
      U16 Size;
      U8 Flags;
      U8 SmallTagIndex;
    }; 
    struct
    {
      void* volatile SubSegmentCode;
      U16 PreviousSize;
      union
      {
        U8 SegmentOffset;
        struct
        {
          U8 LFHFlags;
          U8 UnusedBytes;
        }; 
      }; 
    }; 
    struct
    {
      U16 FunctionIndex;
      U16 ContextValue;
    }; 
    struct
    {
      U32 InterceptorValue;
      U16 UnusedBytesLength;
      U8 EntryOffset;
      U8 ExtendedBlockSignature;
    }; 
    struct
    {
      U32 Code1;
      union
      {
        struct
        {
          U16 Code2;
          U8 Code3;
          U8 Code4;
        }; 
        U32 Code234;
      }; 
    }; 
    U64 AgregateCode;
  }; 
} HEAP_ENTRY, *PHEAP_ENTRY; 

typedef struct _HEAP_VIRTUAL_ALLOC_ENTRY
{
  struct _LIST_ENTRY Entry;
  struct _HEAP_ENTRY_EXTRA ExtraStuff;
  U32 CommitSize;
  U32 ReserveSize;
  struct _HEAP_ENTRY BusyBlock;
} HEAP_VIRTUAL_ALLOC_ENTRY, *PHEAP_VIRTUAL_ALLOC_ENTRY; 

