typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef union _SLIST_HEADER
{
  union
  {
    U64 Alignment;
    struct
    {
      struct _SINGLE_LIST_ENTRY Next;
      U16 Depth;
      U16 Sequence;
    }; 
  }; 
} SLIST_HEADER, *PSLIST_HEADER; 

typedef enum _POOL_TYPE
{
  NonPagedPool = 0,
  NonPagedPoolExecute = 0,
  PagedPool = 1,
  NonPagedPoolMustSucceed = 2,
  DontUseThisType = 3,
  NonPagedPoolCacheAligned = 4,
  PagedPoolCacheAligned = 5,
  NonPagedPoolCacheAlignedMustS = 6,
  MaxPoolType = 7,
  NonPagedPoolBase = 0,
  NonPagedPoolBaseMustSucceed = 2,
  NonPagedPoolBaseCacheAligned = 4,
  NonPagedPoolBaseCacheAlignedMustS = 6,
  NonPagedPoolSession = 32,
  PagedPoolSession = 33,
  NonPagedPoolMustSucceedSession = 34,
  DontUseThisTypeSession = 35,
  NonPagedPoolCacheAlignedSession = 36,
  PagedPoolCacheAlignedSession = 37,
  NonPagedPoolCacheAlignedMustSSession = 38,
  NonPagedPoolNx = 512,
  NonPagedPoolNxCacheAligned = 516,
  NonPagedPoolSessionNx = 544,
} POOL_TYPE, *PPOOL_TYPE;

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _GENERAL_LOOKASIDE_POOL
{
  union
  {
    union _SLIST_HEADER ListHead;
    struct _SINGLE_LIST_ENTRY SingleListHead;
  }; 
  U16 Depth;
  U16 MaximumDepth;
  U32 TotalAllocates;
  union
  {
    U32 AllocateMisses;
    U32 AllocateHits;
  }; 
  U32 TotalFrees;
  union
  {
    U32 FreeMisses;
    U32 FreeHits;
  }; 
  enum _POOL_TYPE Type;
  U32 Tag;
  U32 Size;
  union
  {
    void* AllocateEx;
    void* Allocate;
  }; 
  union
  {
    void* FreeEx;
    void* Free;
  }; 
  struct _LIST_ENTRY ListEntry;
  U32 LastTotalAllocates;
  union
  {
    U32 LastAllocateMisses;
    U32 LastAllocateHits;
  }; 
  U32 Future[2];
} GENERAL_LOOKASIDE_POOL, *PGENERAL_LOOKASIDE_POOL; 

typedef struct _LOOKASIDE_LIST_EX
{
  struct _GENERAL_LOOKASIDE_POOL L;
} LOOKASIDE_LIST_EX, *PLOOKASIDE_LIST_EX; 

