typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef enum _ARBITER_REQUEST_SOURCE
{
  ArbiterRequestUndefined = -1,
  ArbiterRequestLegacyReported = 0,
  ArbiterRequestHalReported = 1,
  ArbiterRequestLegacyAssigned = 2,
  ArbiterRequestPnpDetected = 3,
  ArbiterRequestPnpEnumerated = 4,
} ARBITER_REQUEST_SOURCE, *PARBITER_REQUEST_SOURCE;

typedef enum _INTERFACE_TYPE
{
  InterfaceTypeUndefined = -1,
  Internal = 0,
  Isa = 1,
  Eisa = 2,
  MicroChannel = 3,
  TurboChannel = 4,
  PCIBus = 5,
  VMEBus = 6,
  NuBus = 7,
  PCMCIABus = 8,
  CBus = 9,
  MPIBus = 10,
  MPSABus = 11,
  ProcessorInternal = 12,
  InternalPowerBus = 13,
  PNPISABus = 14,
  PNPBus = 15,
  MaximumInterfaceType = 16,
} INTERFACE_TYPE, *PINTERFACE_TYPE;

typedef enum _ARBITER_RESULT
{
  ArbiterResultUndefined = -1,
  ArbiterResultSuccess = 0,
  ArbiterResultExternalConflict = 1,
  ArbiterResultNullRequest = 2,
} ARBITER_RESULT, *PARBITER_RESULT;

typedef struct _ARBITER_LIST_ENTRY
{
  struct _LIST_ENTRY ListEntry;
  U32 AlternativeCount;
  struct _IO_RESOURCE_DESCRIPTOR* Alternatives;
  struct _DEVICE_OBJECT* PhysicalDeviceObject;
  enum _ARBITER_REQUEST_SOURCE RequestSource;
  U32 Flags;
  S32 WorkSpace;
  enum _INTERFACE_TYPE InterfaceType;
  U32 SlotNumber;
  U32 BusNumber;
  struct _CM_PARTIAL_RESOURCE_DESCRIPTOR* Assignment;
  struct _IO_RESOURCE_DESCRIPTOR* SelectedAlternative;
  enum _ARBITER_RESULT Result;
} ARBITER_LIST_ENTRY, *PARBITER_LIST_ENTRY; 

