typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _DISPATCHER_HEADER
{
  union
  {
    struct
    {
      U8 Type;
      union
      {
        U8 Abandoned;
        U8 Absolute;
        U8 NpxIrql;
        struct
        {
          U8 Signalling;
          union
          {
            U8 Size;
            struct
            {
              U8 Hand;
              union
              {
                U8 Inserted;
                U8 DebugActive;
                U8 DpcActive;
              }; 
            }; 
          }; 
        }; 
      }; 
    }; 
    volatile S32 Lock;
  }; 
  S32 SignalState;
  struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; 

typedef struct _KQUEUE
{
  struct _DISPATCHER_HEADER Header;
  struct _LIST_ENTRY EntryListHead;
  U32 CurrentCount;
  U32 MaximumCount;
  struct _LIST_ENTRY ThreadListHead;
} KQUEUE, *PKQUEUE; 

union EX_QUEUE_WORKER_INFO
{
  union
  {
    struct 
    {
      U32 QueueDisabled : 1; 
      U32 MakeThreadsAsNecessary : 1; 
      U32 WaitMode : 1; 
      U32 WorkerCount : 29; 
    }; 
    S32 QueueWorkerInfo;
  }; 
}; 

typedef struct _EX_WORK_QUEUE
{
  struct _KQUEUE WorkerQueue;
  U32 DynamicThreadCount;
  U32 WorkItemsProcessed;
  U32 WorkItemsProcessedLastPass;
  U32 QueueDepthLastPass;
  union EX_QUEUE_WORKER_INFO Info;
  S32 __PADDING__[1];
} EX_WORK_QUEUE, *PEX_WORK_QUEUE; 

