typedef union _LARGE_INTEGER
{
  union
  {
    struct
    {
      U32 LowPart;
      S32 HighPart;
    }; 
    struct
    {
      U32 LowPart;
      S32 HighPart;
    } u;
    S64 QuadPart;
  }; 
} LARGE_INTEGER, *PLARGE_INTEGER; 

typedef struct _GUID
{
  U32 Data1;
  U16 Data2;
  U16 Data3;
  U8 Data4[8];
} GUID, *PGUID; 

typedef struct _WNODE_HEADER
{
  U32 BufferSize;
  U32 ProviderId;
  union
  {
    U64 HistoricalContext;
    struct
    {
      U32 Version;
      U32 Linkage;
    }; 
  }; 
  union
  {
    U32 CountLost;
    void* KernelHandle;
    union _LARGE_INTEGER TimeStamp;
  }; 
  struct _GUID Guid;
  U32 ClientContext;
  U32 Flags;
} WNODE_HEADER, *PWNODE_HEADER; 

typedef struct _SINGLE_LIST_ENTRY
{
  struct _SINGLE_LIST_ENTRY* Next;
} SINGLE_LIST_ENTRY, *PSINGLE_LIST_ENTRY; 

typedef struct _ETW_BUFFER_CONTEXT
{
  U8 ProcessorNumber;
  U8 Alignment;
  U16 LoggerId;
} ETW_BUFFER_CONTEXT, *PETW_BUFFER_CONTEXT; 

typedef enum _ETW_BUFFER_STATE
{
  EtwBufferStateFree = 0,
  EtwBufferStateGeneralLogging = 1,
  EtwBufferStateCSwitch = 2,
  EtwBufferStateFlush = 3,
  EtwBufferStateMaximum = 4,
} ETW_BUFFER_STATE, *PETW_BUFFER_STATE;

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _WMI_BUFFER_HEADER
{
  union
  {
    struct _WNODE_HEADER Wnode;
    struct
    {
      U32 BufferSize;
      U32 SavedOffset;
      volatile U32 CurrentOffset;
      volatile S32 ReferenceCount;
      union
      {
        union _LARGE_INTEGER TimeStamp;
        union _LARGE_INTEGER StartPerfClock;
      }; 
      S64 SequenceNumber;
      union
      {
        U32 Padding0[2];
        struct _SINGLE_LIST_ENTRY SlistEntry;
        struct _WMI_BUFFER_HEADER* NextBuffer;
      }; 
      struct _ETW_BUFFER_CONTEXT ClientContext;
      union
      {
        enum _ETW_BUFFER_STATE State;
        U32 Flags;
      }; 
    }; 
  }; 
  U32 Offset;
  U16 BufferFlag;
  U16 BufferType;
  union
  {
    U32 Padding1[4];
    union _LARGE_INTEGER StartTime;
    struct _LIST_ENTRY Entry;
    struct
    {
      void* Padding2;
      struct _SINGLE_LIST_ENTRY GlobalEntry;
    }; 
    struct
    {
      void* Pointer0;
      void* Pointer1;
    }; 
  }; 
} WMI_BUFFER_HEADER, *PWMI_BUFFER_HEADER; 

