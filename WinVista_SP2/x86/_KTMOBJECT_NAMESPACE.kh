typedef struct _RTL_BALANCED_LINKS
{
  struct _RTL_BALANCED_LINKS* Parent;
  struct _RTL_BALANCED_LINKS* LeftChild;
  struct _RTL_BALANCED_LINKS* RightChild;
  char Balance;
  U8 Reserved[3];
} RTL_BALANCED_LINKS, *PRTL_BALANCED_LINKS; 

typedef struct _RTL_AVL_TABLE
{
  struct _RTL_BALANCED_LINKS BalancedRoot;
  void* OrderedPointer;
  U32 WhichOrderedElement;
  U32 NumberGenericTableElements;
  U32 DepthOfTree;
  struct _RTL_BALANCED_LINKS* RestartKey;
  U32 DeleteCount;
  void* CompareRoutine;
  void* AllocateRoutine;
  void* FreeRoutine;
  void* TableContext;
} RTL_AVL_TABLE, *PRTL_AVL_TABLE; 

typedef struct _LIST_ENTRY
{
  struct _LIST_ENTRY* Flink;
  struct _LIST_ENTRY* Blink;
} LIST_ENTRY, *PLIST_ENTRY; 

typedef struct _DISPATCHER_HEADER
{
  union
  {
    struct
    {
      U8 Type;
      union
      {
        U8 Abandoned;
        U8 Absolute;
        U8 NpxIrql;
        struct
        {
          U8 Signalling;
          union
          {
            U8 Size;
            struct
            {
              U8 Hand;
              union
              {
                U8 Inserted;
                U8 DebugActive;
                U8 DpcActive;
              }; 
            }; 
          }; 
        }; 
      }; 
    }; 
    volatile S32 Lock;
  }; 
  S32 SignalState;
  struct _LIST_ENTRY WaitListHead;
} DISPATCHER_HEADER, *PDISPATCHER_HEADER; 

typedef struct _KMUTANT
{
  struct _DISPATCHER_HEADER Header;
  struct _LIST_ENTRY MutantListEntry;
  struct _KTHREAD* OwnerThread;
  U8 Abandoned;
  U8 ApcDisable;
  char __PADDING__[2];
} KMUTANT, *PKMUTANT; 

typedef struct _KTMOBJECT_NAMESPACE
{
  struct _RTL_AVL_TABLE Table;
  struct _KMUTANT Mutex;
  U16 LinksOffset;
  U16 GuidOffset;
  U8 Expired;
  char __PADDING__[3];
} KTMOBJECT_NAMESPACE, *PKTMOBJECT_NAMESPACE; 

